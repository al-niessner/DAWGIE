// COPYRIGHT:
function earliestDate(e,t){return void 0==e?t:moment(t)>moment(e)?e:t}function latestDate(e,t){return void 0==e?t:moment(t)>moment(e)?t:e}function timeSince(e,t){var n=new Date(t)-new Date(e),r=Math.floor(n/1e3),i=Math.floor(r/60);r-=60*i;var s=Math.floor(i/60);i-=60*s;var a=Math.floor(s/24);return s-=24*a,a+":"+pad(s,2)+":"+pad(i,2)+":"+pad(r,2)}function pad(e,t){for(var n=e+"";n.length<t;)n="0"+n;return n}var dependencyTree={allAlgorithms:[],crewAlgorithms:{},doingAlgorithms:{},scheduledAlgorithms:{},completedAlgorithms:[],completedAlgorithmsNames:{}};$.when($.get("/images/svg/av.svg",function(e){$("#svg_image").html(e.children)}),$.get("/app/schedule/tasks",function(e){var t=$.parseJSON(e);dependencyTree.allAlgorithms=dependencyTree.allAlgorithms.concat(t)}),$.get("/app/schedule/crew",function(e){var t=$.parseJSON(e);for(var n in t.busy)dependencyTree.crewAlgorithms[t.busy[n].split("[")[0]]=t.busy[n],dependencyTree.allAlgorithms.push(t.busy[n].split("[")[0])}),$.get("/app/schedule/doing",function(e){var t=$.parseJSON(e);for(var n in t)dependencyTree.doingAlgorithms[n]=t[n],dependencyTree.allAlgorithms.push(n)}),$.get("/app/schedule/todo",function(e){var t=$.parseJSON(e);for(var n in t)dependencyTree.scheduledAlgorithms[t[n].name]=t[n].targets,dependencyTree.allAlgorithms.push(t[n].name)}),$.get("/app/schedule/success",function(e){data=$.parseJSON(e);for(var t in data){var n=data[t];n.status="success",dependencyTree.completedAlgorithms.push(n),dependencyTree.completedAlgorithmsNames[n.task]=!0,dependencyTree.allAlgorithms.push(n.task)}}),$.get("/app/schedule/failure",function(e){data=$.parseJSON(e);for(var t in data){var n=data[t];n.status="failure",dependencyTree.completedAlgorithms.push(n),dependencyTree.completedAlgorithmsNames[n.task]=!0,dependencyTree.allAlgorithms.push(n.task)}})).then(function(){dependencyTree.allAlgorithms=Array.from(new Set(dependencyTree.allAlgorithms)).sort();var e={};for(var t in dependencyTree.allAlgorithms){var n={},r=dependencyTree.allAlgorithms[t];n.targets=[],n.name=r,dependencyTree.scheduledAlgorithms[r]?(n.status="queued",n.targets=dependencyTree.scheduledAlgorithms[r]):dependencyTree.doingAlgorithms[r]?n.status="active":dependencyTree.crewAlgorithms[r]?n.status="active":dependencyTree.completedAlgorithmsNames[r]?n.status="complete":n.status="idle",e[r]=n}for(var t in dependencyTree.completedAlgorithms)e[dependencyTree.completedAlgorithms[t].task].run_id=dependencyTree.completedAlgorithms[t].runid,e[dependencyTree.completedAlgorithms[t].task].start_date=earliestDate(e[dependencyTree.completedAlgorithms[t].task].start_date,dependencyTree.completedAlgorithms[t].timing.started),e[dependencyTree.completedAlgorithms[t].task].end_date=latestDate(e[dependencyTree.completedAlgorithms[t].task].end_date,dependencyTree.completedAlgorithms[t].timing.started),e[dependencyTree.completedAlgorithms[t].task].targets.push({name:dependencyTree.completedAlgorithms[t].target,status:dependencyTree.completedAlgorithms[t].status,timing:dependencyTree.completedAlgorithms[t].timing});$("#algorithms_table").html(HandlebarsTemplates.algorithms_table(e));for(var t in e)"completed"==e[t].status?$("#algorithm_modals").append(HandlebarsTemplates.algorithms_modal_complete(e[t])):"scheduled"==e[t].status?$("#algorithm_modals").append(HandlebarsTemplates.algorithms_modal_scheduled(e[t])):"active"==e[t].status&&$("#algorithm_modals").append(HandlebarsTemplates.algorithms_modal_active(e[t]));for(var t in e)setSvgActiveNode("algorithms",e[t].name.replace(".","_"),e[t].status)});