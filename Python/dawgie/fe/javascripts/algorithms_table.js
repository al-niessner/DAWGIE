// COPYRIGHT:
function earliestDate(e,t){return void 0==e?t:moment(t)>moment(e)?e:t}function latestDate(e,t){return void 0==e?t:moment(t)>moment(e)?t:e}function timeSince(e,t){var r=new Date(t)-new Date(e),a=Math.floor(r/1e3),d=Math.floor(a/60);a-=60*d;var s=Math.floor(d/60);d-=60*s;var n=Math.floor(s/24);return s-=24*n,n+":"+pad(s,2)+":"+pad(d,2)+":"+pad(a,2)}function pad(e,t){for(var r=e+"";r.length<t;)r="0"+r;return r}var dependencyTree={allAlgorithms:[],crewAlgorithms:{},doingAlgorithms:{},scheduledAlgorithms:{},completedAlgorithms:[],completedAlgorithmsNames:{}};$.when($.get("/images/svg/av.svg",function(e){$("#svg_image").html(e.children)}),$.get("/app/schedule/tasks",function(e){var t=$.parseJSON(e);dependencyTree.allAlgorithms=dependencyTree.allAlgorithms.concat(t)}),$.get("/app/schedule/crew",function(e){var t=$.parseJSON(e);for(var r in t.busy)dependencyTree.crewAlgorithms[t.busy[r].split("[")[0]]=t.busy[r],dependencyTree.allAlgorithms.push(t.busy[r].split("[")[0])}),$.get("/app/schedule/doing",function(e){var t=$.parseJSON(e);for(var r in t)dependencyTree.doingAlgorithms[r]=t[r],dependencyTree.allAlgorithms.push(r)}),$.get("/app/schedule/todo",function(e){var t=$.parseJSON(e);for(var r in t)dependencyTree.scheduledAlgorithms[t[r].name]=t[r].targets,dependencyTree.allAlgorithms.push(t[r].name)}),$.get("/app/schedule/success",function(e){data=$.parseJSON(e);for(var t in data){var r=data[t];r.status="success",dependencyTree.completedAlgorithms.push(r),dependencyTree.completedAlgorithmsNames[r.task]=!0,dependencyTree.allAlgorithms.push(r.task)}}),$.get("/app/schedule/failure",function(e){data=$.parseJSON(e);for(var t in data){var r=data[t];r.status="failure",dependencyTree.completedAlgorithms.push(r),dependencyTree.completedAlgorithmsNames[r.task]=!0,dependencyTree.allAlgorithms.push(r.task)}})).then(function(){dependencyTree.allAlgorithms=Array.from(new Set(dependencyTree.allAlgorithms)).sort();var e={};for(var t in dependencyTree.allAlgorithms){var r={},a=dependencyTree.allAlgorithms[t];r.targets=[],r.name=a,dependencyTree.scheduledAlgorithms[a]?(r.status="queued",r.targets=dependencyTree.scheduledAlgorithms[a]):dependencyTree.doingAlgorithms[a]?r.status="active":dependencyTree.crewAlgorithms[a]?r.status="active":dependencyTree.completedAlgorithmsNames[a]?r.status="complete":r.status="idle",e[a]=r}for(var t in dependencyTree.completedAlgorithms)e[dependencyTree.completedAlgorithms[t].task].run_id=dependencyTree.completedAlgorithms[t].runid,e[dependencyTree.completedAlgorithms[t].task].start_date=earliestDate(e[dependencyTree.completedAlgorithms[t].task].start_date,dependencyTree.completedAlgorithms[t].timing.started),e[dependencyTree.completedAlgorithms[t].task].end_date=latestDate(e[dependencyTree.completedAlgorithms[t].task].end_date,dependencyTree.completedAlgorithms[t].timing.started),e[dependencyTree.completedAlgorithms[t].task].targets.push({name:dependencyTree.completedAlgorithms[t].target,status:dependencyTree.completedAlgorithms[t].status,timing:dependencyTree.completedAlgorithms[t].timing});$("#algorithms_table").html(HandlebarsTemplates.algorithms_table(e));for(var t in e)"completed"==e[t].status?$("#algorithm_modals").append(HandlebarsTemplates.algorithms_modal_complete(e[t])):"scheduled"==e[t].status?$("#algorithm_modals").append(HandlebarsTemplates.algorithms_modal_scheduled(e[t])):"active"==e[t].status&&$("#algorithm_modals").append(HandlebarsTemplates.algorithms_modal_active(e[t]));for(var t in e)setSvgActiveNode("algorithms",e[t].name.replace(".","_"),e[t].status)});