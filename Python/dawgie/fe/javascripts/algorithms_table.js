// COPYRIGHT:
function earliestDate(t,e){return void 0==t?e:moment(e)>moment(t)?t:e}function latestDate(t,e){return void 0==t?e:moment(e)>moment(t)?e:t}function timeSince(t,e){var n=new Date(e)-new Date(t),r=Math.floor(n/1e3),i=Math.floor(r/60);r-=60*i;var s=Math.floor(i/60);i-=60*s;var o=Math.floor(s/24);return s-=24*o,o+":"+pad(s,2)+":"+pad(i,2)+":"+pad(r,2)}function pad(t,e){for(var n=t+"";n.length<e;)n="0"+n;return n}var dependencyTree={allAlgorithms:[],crewAlgorithms:{},doingAlgorithms:{},scheduledAlgorithms:{},completedAlgorithms:[],completedAlgorithmsNames:{}};$.when($.get("/images/svg/av.svg",function(t){$("#svg_image").html(t.children)}),$.get("/app/schedule/tasks",function(t){var e=$.parseJSON(t);dependencyTree.allAlgorithms=dependencyTree.allAlgorithms.concat(e)}),$.get("/app/schedule/crew",function(t){var e=$.parseJSON(t);for(var n in e.busy)dependencyTree.crewAlgorithms[e.busy[n].split("[")[0]]=e.busy[n],dependencyTree.allAlgorithms.push(e.busy[n].split("[")[0])}),$.get("/app/schedule/doing",function(t){var e=$.parseJSON(t);for(var n in e)dependencyTree.doingAlgorithms[n]=e[n],dependencyTree.allAlgorithms.push(n)}),$.get("/app/schedule/todo",function(t){var e=$.parseJSON(t);for(var n in e)dependencyTree.scheduledAlgorithms[e[n].name]=e[n].targets,dependencyTree.allAlgorithms.push(e[n].name)}),$.get("/app/schedule/success",function(t){data=$.parseJSON(t);for(var e in data){var n=data[e];n.status="success",dependencyTree.completedAlgorithms.push(n),dependencyTree.completedAlgorithmsNames[n.task]=!0,dependencyTree.allAlgorithms.push(n.task)}}),$.get("/app/schedule/failure",function(t){data=$.parseJSON(t);for(var e in data){var n=data[e];n.status="failure",dependencyTree.completedAlgorithms.push(n),dependencyTree.completedAlgorithmsNames[n.task]=!0,dependencyTree.allAlgorithms.push(n.task)}})).then(function(){dependencyTree.allAlgorithms=Array.from(new Set(dependencyTree.allAlgorithms)).sort();var t={};for(var e in dependencyTree.allAlgorithms){var n={},r=dependencyTree.allAlgorithms[e];n.targets=[],n.name=r,dependencyTree.scheduledAlgorithms[r]?(n.status="queued",n.targets=dependencyTree.scheduledAlgorithms[r]):dependencyTree.doingAlgorithms[r]?n.status="active":dependencyTree.crewAlgorithms[r]?n.status="active":dependencyTree.completedAlgorithmsNames[r]?n.status="complete":n.status="idle",t[r]=n}for(var e in dependencyTree.completedAlgorithms)t[dependencyTree.completedAlgorithms[e].task].run_id=dependencyTree.completedAlgorithms[e].runid,t[dependencyTree.completedAlgorithms[e].task].start_date=earliestDate(t[dependencyTree.completedAlgorithms[e].task].start_date,dependencyTree.completedAlgorithms[e].timing.started),t[dependencyTree.completedAlgorithms[e].task].end_date=latestDate(t[dependencyTree.completedAlgorithms[e].task].end_date,dependencyTree.completedAlgorithms[e].timing.started),t[dependencyTree.completedAlgorithms[e].task].targets.push({name:dependencyTree.completedAlgorithms[e].target,status:dependencyTree.completedAlgorithms[e].status,timing:dependencyTree.completedAlgorithms[e].timing});$("#algorithms_table").html(HandlebarsTemplates.algorithms_table(t));for(var e in t)"completed"==t[e].status?$("#algorithm_modals").append(HandlebarsTemplates.algorithms_modal_complete(t[e])):"scheduled"==t[e].status?$("#algorithm_modals").append(HandlebarsTemplates.algorithms_modal_scheduled(t[e])):"active"==t[e].status&&$("#algorithm_modals").append(HandlebarsTemplates.algorithms_modal_active(t[e]));for(var e in t)setSvgActiveNode("algorithms",t[e].name.replace(".","_"),t[e].status)});