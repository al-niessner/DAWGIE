name: Static Analysis
run-name: ${{ github.actor }} is checking code quality/style for merge compliance
on: [push]
jobs:
  Style:
    name: Coding Style
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          architecture: 'x64'
          python-version: '3.12'
      - name: Prepare Python
        run: |
          python -m pip install --upgrade pip
          pip install -r Python/requirements.txt
          pip install -r .ci/requirements.txt
      - name: black
        run: black --check --diff -l 80 --skip-string-normalization Python Test
  Linters:
    name: Code Quality
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          architecture: 'x64'
          python-version: '3.12'
      - name: Prepare Python
        run: |
          python -m pip install --upgrade pip
          pip install -r Python/requirements.txt
          pip install -r .ci/requirements.txt
      - name: pylint
        run: pylint --rcfile .github/workflows/pylint.rc Python/dawgie
      - name: flake8
        run: flake8 --ignore E501,E203,W503 Python/dawgie
  Security:
    name: Code Security
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          architecture: 'x64'
          python-version: '3.12'
      - name: Prepare Python
        run: |
          python -m pip install --upgrade pip
          pip install -r Python/requirements.txt
          pip install -r .ci/requirements.txt
      - name: bandit
        run: bandit -b .github/workflows/bandit_baseline.json -r Python/dawgie
  Delivery:
    name: PyPi Compliance
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          architecture: 'x64'
          python-version: '3.12'
      - name: Prepare Python
        run: |
          python -m pip install --upgrade pip
          pip install -r Python/requirements.txt
          pip install -r .ci/requirements.txt
      - name: pyroma
        run: pyroma --min 10 Python
